// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/indrayyana/go-fiber-boilerplate/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/availability": {
            "get": {
                "description": "予約可能な時間枠を取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "空き時間検索"
                ],
                "summary": "空き時間取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "日付 (YYYY-MM-DD)",
                        "name": "date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "所要時間（分）",
                        "name": "duration",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "スタッフID絞り込み",
                        "name": "staff_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "メニューID（カンマ区切り）",
                        "name": "menu_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "空き時間一覧",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "description": "ページング付きで全顧客を取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "顧客管理"
                ],
                "summary": "顧客一覧取得",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "ページ番号",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "ページサイズ",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "顧客一覧",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "新しい顧客を登録します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "顧客管理"
                ],
                "summary": "顧客新規登録",
                "parameters": [
                    {
                        "description": "顧客データ",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "登録された顧客情報",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "description": "IDで指定した顧客の詳細情報を取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "顧客管理"
                ],
                "summary": "顧客詳細取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "顧客ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "顧客情報",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                }
            },
            "put": {
                "description": "IDで指定した顧客の情報を更新します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "顧客管理"
                ],
                "summary": "顧客情報更新",
                "parameters": [
                    {
                        "type": "string",
                        "description": "顧客ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新する顧客データ",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新された顧客情報",
                        "schema": {
                            "$ref": "#/definitions/model.Customer"
                        }
                    }
                }
            },
            "delete": {
                "description": "IDで指定した顧客を削除します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "顧客管理"
                ],
                "summary": "顧客削除",
                "parameters": [
                    {
                        "type": "string",
                        "description": "顧客ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "削除成功"
                    }
                }
            }
        },
        "/health-check": {
            "get": {
                "description": "サービスとデータベース接続の状態を確認します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ヘルスチェック"
                ],
                "summary": "ヘルスチェック",
                "responses": {
                    "200": {
                        "description": "正常レスポンス",
                        "schema": {
                            "$ref": "#/definitions/example.HealthCheckResponse"
                        }
                    },
                    "500": {
                        "description": "サーバーエラー",
                        "schema": {
                            "$ref": "#/definitions/example.HealthCheckResponseError"
                        }
                    }
                }
            }
        },
        "/reservations": {
            "get": {
                "description": "ページング・フィルター付きで全予約を取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "予約管理"
                ],
                "summary": "予約一覧取得",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "ページ番号",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "ページサイズ",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ステータス絞り込み",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "日付絞り込み (YYYY-MM-DD)",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "予約一覧",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "メニューとオプションを含む新しい予約を作成します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "予約管理"
                ],
                "summary": "新規予約作成",
                "parameters": [
                    {
                        "description": "予約データ",
                        "name": "reservation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "作成された予約情報",
                        "schema": {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    }
                }
            }
        },
        "/reservations/{id}": {
            "get": {
                "description": "IDで指定した予約の詳細情報を関連データと共に取得します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "予約管理"
                ],
                "summary": "予約詳細取得",
                "parameters": [
                    {
                        "type": "string",
                        "description": "予約ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "予約詳細情報",
                        "schema": {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    }
                }
            },
            "put": {
                "description": "IDで指定した予約の情報を更新します",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "予約管理"
                ],
                "summary": "予約情報更新",
                "parameters": [
                    {
                        "type": "string",
                        "description": "予約ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新する予約データ",
                        "name": "reservation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新された予約情報",
                        "schema": {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    }
                }
            }
        },
        "/reservations/{id}/cancel": {
            "put": {
                "description": "IDで指定した予約をキャンセルします",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "予約管理"
                ],
                "summary": "予約キャンセル",
                "parameters": [
                    {
                        "type": "string",
                        "description": "予約ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "キャンセル理由",
                        "name": "reason",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "キャンセル済み予約情報",
                        "schema": {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    }
                }
            }
        },
        "/reservations/{id}/status": {
            "patch": {
                "description": "予約ステータスを更新します（管理者・スタッフのみ）",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "予約管理"
                ],
                "summary": "予約ステータス更新",
                "parameters": [
                    {
                        "type": "string",
                        "description": "予約ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ステータス更新データ",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新された予約情報",
                        "schema": {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "example.HealthCheck": {
            "type": "object",
            "properties": {
                "is_up": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Postgre"
                },
                "status": {
                    "type": "string",
                    "example": "Up"
                }
            }
        },
        "example.HealthCheckError": {
            "type": "object",
            "properties": {
                "is_up": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "failed to connect to 'host=localhost user=postgres database=wrongdb': server error (FATAL: database \"wrongdb\" does not exist (SQLSTATE 3D000))"
                },
                "name": {
                    "type": "string",
                    "example": "Postgre"
                },
                "status": {
                    "type": "string",
                    "example": "Down"
                }
            }
        },
        "example.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "is_healthy": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Health check completed"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/example.HealthCheck"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "example.HealthCheckResponseError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "is_healthy": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Health check completed"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/example.HealthCheckError"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "model.Customer": {
            "type": "object",
            "required": [
                "name",
                "phone"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female",
                        "other"
                    ]
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "notes": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 10
                },
                "reservations": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Reservation"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Menu": {
            "type": "object",
            "required": [
                "duration",
                "name",
                "price"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "maxLength": 50
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "minutes",
                    "type": "integer",
                    "maximum": 600,
                    "minimum": 1
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "price": {
                    "description": "yen",
                    "type": "integer",
                    "minimum": 0
                },
                "reservation_menus": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReservationMenu"
                    }
                },
                "sort_order": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Option": {
            "type": "object",
            "required": [
                "duration",
                "name",
                "price"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "maxLength": 50
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "additional minutes",
                    "type": "integer",
                    "maximum": 120,
                    "minimum": 0
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "price": {
                    "description": "additional yen",
                    "type": "integer",
                    "minimum": 0
                },
                "reservation_options": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReservationOption"
                    }
                },
                "sort_order": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Reservation": {
            "type": "object",
            "required": [
                "customer_id",
                "end_time",
                "reservation_date",
                "staff_id",
                "start_time",
                "status"
            ],
            "properties": {
                "cancellation_reason": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "customer": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Customer"
                        }
                    ]
                },
                "customer_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "reservation_date": {
                    "type": "string"
                },
                "reservation_menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReservationMenu"
                    }
                },
                "reservation_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReservationOption"
                    }
                },
                "staff": {
                    "$ref": "#/definitions/model.Staff"
                },
                "staff_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "pending",
                        "confirmed",
                        "completed",
                        "cancelled",
                        "no_show"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.ReservationStatus"
                        }
                    ]
                },
                "total_duration": {
                    "description": "minutes",
                    "type": "integer"
                },
                "total_price": {
                    "description": "yen",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ReservationMenu": {
            "type": "object",
            "required": [
                "quantity"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "menu": {
                    "$ref": "#/definitions/model.Menu"
                },
                "menu_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                },
                "reservation": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    ]
                },
                "reservation_id": {
                    "type": "string"
                },
                "total_price": {
                    "type": "integer"
                },
                "unit_price": {
                    "type": "integer"
                }
            }
        },
        "model.ReservationOption": {
            "type": "object",
            "required": [
                "quantity"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "option": {
                    "$ref": "#/definitions/model.Option"
                },
                "option_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                },
                "reservation": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Reservation"
                        }
                    ]
                },
                "reservation_id": {
                    "type": "string"
                },
                "total_price": {
                    "type": "integer"
                },
                "unit_price": {
                    "type": "integer"
                }
            }
        },
        "model.ReservationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "confirmed",
                "completed",
                "cancelled",
                "no_show"
            ],
            "x-enum-varnames": [
                "ReservationStatusPending",
                "ReservationStatusConfirmed",
                "ReservationStatusCompleted",
                "ReservationStatusCancelled",
                "ReservationStatusNoShow"
            ]
        },
        "model.Shift": {
            "type": "object",
            "required": [
                "date",
                "end_time",
                "staff_id",
                "start_time"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "staff": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Staff"
                        }
                    ]
                },
                "staff_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Staff": {
            "type": "object",
            "required": [
                "email",
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 10
                },
                "position": {
                    "type": "string",
                    "maxLength": 50
                },
                "reservations": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Reservation"
                    }
                },
                "shifts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Shift"
                    }
                },
                "specialties": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Example Value: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "go-fiber-boilerplate API documentation",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
