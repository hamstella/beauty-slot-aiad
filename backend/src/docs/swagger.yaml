basePath: /v1
definitions:
  example.HealthCheck:
    properties:
      is_up:
        example: true
        type: boolean
      name:
        example: Postgre
        type: string
      status:
        example: Up
        type: string
    type: object
  example.HealthCheckError:
    properties:
      is_up:
        example: false
        type: boolean
      message:
        example: 'failed to connect to ''host=localhost user=postgres database=wrongdb'':
          server error (FATAL: database "wrongdb" does not exist (SQLSTATE 3D000))'
        type: string
      name:
        example: Postgre
        type: string
      status:
        example: Down
        type: string
    type: object
  example.HealthCheckResponse:
    properties:
      code:
        example: 200
        type: integer
      is_healthy:
        example: true
        type: boolean
      message:
        example: Health check completed
        type: string
      result:
        items:
          $ref: '#/definitions/example.HealthCheck'
        type: array
      status:
        example: success
        type: string
    type: object
  example.HealthCheckResponseError:
    properties:
      code:
        example: 500
        type: integer
      is_healthy:
        example: false
        type: boolean
      message:
        example: Health check completed
        type: string
      result:
        items:
          $ref: '#/definitions/example.HealthCheckError'
        type: array
      status:
        example: error
        type: string
    type: object
  model.Customer:
    properties:
      birthday:
        type: string
      created_at:
        type: string
      email:
        maxLength: 255
        type: string
      gender:
        enum:
        - male
        - female
        - other
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      notes:
        type: string
      phone:
        maxLength: 20
        minLength: 10
        type: string
      reservations:
        description: Relations
        items:
          $ref: '#/definitions/model.Reservation'
        type: array
      updated_at:
        type: string
    required:
    - name
    - phone
    type: object
  model.Menu:
    properties:
      category:
        maxLength: 50
        type: string
      created_at:
        type: string
      description:
        type: string
      duration:
        description: minutes
        maximum: 600
        minimum: 1
        type: integer
      id:
        type: string
      is_active:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      price:
        description: yen
        minimum: 0
        type: integer
      reservation_menus:
        description: Relations
        items:
          $ref: '#/definitions/model.ReservationMenu'
        type: array
      sort_order:
        type: integer
      updated_at:
        type: string
    required:
    - duration
    - name
    - price
    type: object
  model.Option:
    properties:
      category:
        maxLength: 50
        type: string
      created_at:
        type: string
      description:
        type: string
      duration:
        description: additional minutes
        maximum: 120
        minimum: 0
        type: integer
      id:
        type: string
      is_active:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      price:
        description: additional yen
        minimum: 0
        type: integer
      reservation_options:
        description: Relations
        items:
          $ref: '#/definitions/model.ReservationOption'
        type: array
      sort_order:
        type: integer
      updated_at:
        type: string
    required:
    - duration
    - name
    - price
    type: object
  model.Reservation:
    properties:
      cancellation_reason:
        type: string
      created_at:
        type: string
      customer:
        allOf:
        - $ref: '#/definitions/model.Customer'
        description: Relations
      customer_id:
        type: string
      end_time:
        type: string
      id:
        type: string
      notes:
        type: string
      reservation_date:
        type: string
      reservation_menus:
        items:
          $ref: '#/definitions/model.ReservationMenu'
        type: array
      reservation_options:
        items:
          $ref: '#/definitions/model.ReservationOption'
        type: array
      staff:
        $ref: '#/definitions/model.Staff'
      staff_id:
        type: string
      start_time:
        type: string
      status:
        allOf:
        - $ref: '#/definitions/model.ReservationStatus'
        enum:
        - pending
        - confirmed
        - completed
        - cancelled
        - no_show
      total_duration:
        description: minutes
        type: integer
      total_price:
        description: yen
        type: integer
      updated_at:
        type: string
    required:
    - customer_id
    - end_time
    - reservation_date
    - staff_id
    - start_time
    - status
    type: object
  model.ReservationMenu:
    properties:
      id:
        type: string
      menu:
        $ref: '#/definitions/model.Menu'
      menu_id:
        type: string
      quantity:
        minimum: 1
        type: integer
      reservation:
        allOf:
        - $ref: '#/definitions/model.Reservation'
        description: Relations
      reservation_id:
        type: string
      total_price:
        type: integer
      unit_price:
        type: integer
    required:
    - quantity
    type: object
  model.ReservationOption:
    properties:
      id:
        type: string
      option:
        $ref: '#/definitions/model.Option'
      option_id:
        type: string
      quantity:
        minimum: 1
        type: integer
      reservation:
        allOf:
        - $ref: '#/definitions/model.Reservation'
        description: Relations
      reservation_id:
        type: string
      total_price:
        type: integer
      unit_price:
        type: integer
    required:
    - quantity
    type: object
  model.ReservationStatus:
    enum:
    - pending
    - confirmed
    - completed
    - cancelled
    - no_show
    type: string
    x-enum-varnames:
    - ReservationStatusPending
    - ReservationStatusConfirmed
    - ReservationStatusCompleted
    - ReservationStatusCancelled
    - ReservationStatusNoShow
  model.Shift:
    properties:
      created_at:
        type: string
      date:
        type: string
      end_time:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      staff:
        allOf:
        - $ref: '#/definitions/model.Staff'
        description: Relations
      staff_id:
        type: string
      start_time:
        type: string
      updated_at:
        type: string
    required:
    - date
    - end_time
    - staff_id
    - start_time
    type: object
  model.Staff:
    properties:
      created_at:
        type: string
      email:
        maxLength: 255
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      phone:
        maxLength: 20
        minLength: 10
        type: string
      position:
        maxLength: 50
        type: string
      reservations:
        description: Relations
        items:
          $ref: '#/definitions/model.Reservation'
        type: array
      shifts:
        items:
          $ref: '#/definitions/model.Shift'
        type: array
      specialties:
        type: string
      updated_at:
        type: string
    required:
    - email
    - name
    type: object
host: localhost:8080
info:
  contact: {}
  license:
    name: MIT
    url: https://github.com/indrayyana/go-fiber-boilerplate/blob/main/LICENSE
  title: go-fiber-boilerplate API documentation
  version: 1.0.0
paths:
  /availability:
    get:
      consumes:
      - application/json
      description: 予約可能な時間枠を取得します
      parameters:
      - description: 日付 (YYYY-MM-DD)
        in: query
        name: date
        required: true
        type: string
      - description: 所要時間（分）
        in: query
        name: duration
        required: true
        type: integer
      - description: スタッフID絞り込み
        in: query
        name: staff_id
        type: string
      - description: メニューID（カンマ区切り）
        in: query
        name: menu_ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 空き時間一覧
          schema:
            additionalProperties: true
            type: object
      summary: 空き時間取得
      tags:
      - 空き時間検索
  /customers:
    get:
      consumes:
      - application/json
      description: ページング付きで全顧客を取得します
      parameters:
      - default: 1
        description: ページ番号
        in: query
        name: page
        type: integer
      - default: 10
        description: ページサイズ
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 顧客一覧
          schema:
            additionalProperties: true
            type: object
      summary: 顧客一覧取得
      tags:
      - 顧客管理
    post:
      consumes:
      - application/json
      description: 新しい顧客を登録します
      parameters:
      - description: 顧客データ
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/model.Customer'
      produces:
      - application/json
      responses:
        "201":
          description: 登録された顧客情報
          schema:
            $ref: '#/definitions/model.Customer'
      summary: 顧客新規登録
      tags:
      - 顧客管理
  /customers/{id}:
    delete:
      consumes:
      - application/json
      description: IDで指定した顧客を削除します
      parameters:
      - description: 顧客ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 削除成功
      summary: 顧客削除
      tags:
      - 顧客管理
    get:
      consumes:
      - application/json
      description: IDで指定した顧客の詳細情報を取得します
      parameters:
      - description: 顧客ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 顧客情報
          schema:
            $ref: '#/definitions/model.Customer'
      summary: 顧客詳細取得
      tags:
      - 顧客管理
    put:
      consumes:
      - application/json
      description: IDで指定した顧客の情報を更新します
      parameters:
      - description: 顧客ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新する顧客データ
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/model.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: 更新された顧客情報
          schema:
            $ref: '#/definitions/model.Customer'
      summary: 顧客情報更新
      tags:
      - 顧客管理
  /health-check:
    get:
      consumes:
      - application/json
      description: サービスとデータベース接続の状態を確認します
      produces:
      - application/json
      responses:
        "200":
          description: 正常レスポンス
          schema:
            $ref: '#/definitions/example.HealthCheckResponse'
        "500":
          description: サーバーエラー
          schema:
            $ref: '#/definitions/example.HealthCheckResponseError'
      summary: ヘルスチェック
      tags:
      - ヘルスチェック
  /reservations:
    get:
      consumes:
      - application/json
      description: ページング・フィルター付きで全予約を取得します
      parameters:
      - default: 1
        description: ページ番号
        in: query
        name: page
        type: integer
      - default: 10
        description: ページサイズ
        in: query
        name: limit
        type: integer
      - description: ステータス絞り込み
        in: query
        name: status
        type: string
      - description: 日付絞り込み (YYYY-MM-DD)
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 予約一覧
          schema:
            additionalProperties: true
            type: object
      summary: 予約一覧取得
      tags:
      - 予約管理
    post:
      consumes:
      - application/json
      description: メニューとオプションを含む新しい予約を作成します
      parameters:
      - description: 予約データ
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/model.Reservation'
      produces:
      - application/json
      responses:
        "201":
          description: 作成された予約情報
          schema:
            $ref: '#/definitions/model.Reservation'
      summary: 新規予約作成
      tags:
      - 予約管理
  /reservations/{id}:
    get:
      consumes:
      - application/json
      description: IDで指定した予約の詳細情報を関連データと共に取得します
      parameters:
      - description: 予約ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 予約詳細情報
          schema:
            $ref: '#/definitions/model.Reservation'
      summary: 予約詳細取得
      tags:
      - 予約管理
    put:
      consumes:
      - application/json
      description: IDで指定した予約の情報を更新します
      parameters:
      - description: 予約ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新する予約データ
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/model.Reservation'
      produces:
      - application/json
      responses:
        "200":
          description: 更新された予約情報
          schema:
            $ref: '#/definitions/model.Reservation'
      summary: 予約情報更新
      tags:
      - 予約管理
  /reservations/{id}/cancel:
    put:
      consumes:
      - application/json
      description: IDで指定した予約をキャンセルします
      parameters:
      - description: 予約ID
        in: path
        name: id
        required: true
        type: string
      - description: キャンセル理由
        in: body
        name: reason
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: キャンセル済み予約情報
          schema:
            $ref: '#/definitions/model.Reservation'
      summary: 予約キャンセル
      tags:
      - 予約管理
  /reservations/{id}/status:
    patch:
      consumes:
      - application/json
      description: 予約ステータスを更新します（管理者・スタッフのみ）
      parameters:
      - description: 予約ID
        in: path
        name: id
        required: true
        type: string
      - description: ステータス更新データ
        in: body
        name: status
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新された予約情報
          schema:
            $ref: '#/definitions/model.Reservation'
      summary: 予約ステータス更新
      tags:
      - 予約管理
securityDefinitions:
  BearerAuth:
    description: 'Example Value: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
